/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IStakingPositions,
  IStakingPositionsInterface,
} from "../../../contracts/interfaces/IStakingPositions";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_apr",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_lockTime",
        type: "uint256",
      },
    ],
    name: "addAprLockOption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lockOptIndex",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IStakingPositions__factory {
  static readonly abi = _abi;
  static createInterface(): IStakingPositionsInterface {
    return new utils.Interface(_abi) as IStakingPositionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IStakingPositions {
    return new Contract(address, _abi, signerOrProvider) as IStakingPositions;
  }
}
