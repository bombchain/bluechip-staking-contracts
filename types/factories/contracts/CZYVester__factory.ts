/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { CZYVester, CZYVesterInterface } from "../../contracts/CZYVester";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CreateVest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountWithdrawn",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "addStakingContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "createVest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fullyVestedPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCZY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserVests",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalWithdraws",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "withdrawsCompleted",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct CZYVester.TokenVest[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getWithdrawsAllowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakeContracts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "vests",
    outputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalWithdraws",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawsCompleted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawsPerPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526276a700600255600a60035534801561001c57600080fd5b50604051610e1b380380610e1b83398101604081905261003b916100b9565b61004433610069565b600180546001600160a01b0319166001600160a01b03929092169190911790556100e9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100cb57600080fd5b81516001600160a01b03811681146100e257600080fd5b9392505050565b610d23806100f86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806384a86e6d1161008c578063abeae40311610066578063abeae403146101c0578063f0dc2c20146101d1578063f2fde38b146101e4578063f8f21e5d146101f757600080fd5b806384a86e6d1461014957806385b9a653146101845780638da5cb5b146101af57600080fd5b80630cf516e1146100d45780632e1a7d4d146100fa578063466bac721461010f5780635351120f1461012f5780637108aabb14610138578063715018a614610141575b600080fd5b6100e76100e2366004610b3e565b61020a565b6040519081526020015b60405180910390f35b61010d610108366004610b68565b6102c0565b005b61012261011d366004610b81565b6106e9565b6040516100f19190610ba3565b6100e760035481565b6100e760025481565b61010d610790565b61015c610157366004610b3e565b6107a4565b604080519586526020860194909452928401919091526060830152608082015260a0016100f1565b610197610192366004610b68565b6107f2565b6040516001600160a01b0390911681526020016100f1565b6000546001600160a01b0316610197565b6001546001600160a01b0316610197565b61010d6101df366004610b81565b61081c565b61010d6101f2366004610b81565b610876565b61010d610205366004610b3e565b6108ef565b6001600160a01b038216600090815260046020526040812080548291908490811061023757610237610c11565b600091825260208083206040805160a08101825260059094029091018054808552600182015493850184905260028201549285018390526003820154606086015260049091015460808501529294509161029091610c3d565b61029a9190610c50565b825190915081906102ab9042610c3d565b6102b59190610c50565b925050505b92915050565b3360008181526004602052604081208054849081106102e1576102e1610c11565b9060005260206000209060050201905060008160040154116103405760405162461bcd60e51b81526020600482015260136024820152721d995cdd08191bd95cc81b9bdd08195e1a5cdd606a1b60448201526064015b60405180910390fd5b80600201548160030154106103975760405162461bcd60e51b815260206004820152601b60248201527f616c726561647920776974686472657720616c6c20746f6b656e7300000000006044820152606401610337565b6000816002015482600401546103ad9190610c50565b905060006103bb848661020a565b9050826002015481116103ce57806103d4565b82600201545b905080836003015410610451576040805162461bcd60e51b81526020600482015260248101919091527f63757272656e746c792076657374696e672c20706c656173652077616974206660448201527f6f72206e65787420776974686472617761626c652074696d6520706572696f646064820152608401610337565b60008360030154826104639190610c3d565b600385018390556001549091506001600160a01b031663a9059cbb866104898487610c72565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156104d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f89190610c89565b506001546001600160a01b031663d547deed866105158487610c72565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561055b57600080fd5b505af115801561056f573d6000803e3d6000fd5b505050508360020154846003015403610693576001600160a01b038516600090815260046020526040902080546105a890600190610c3d565b815481106105b8576105b8610c11565b906000526020600020906005020160046000876001600160a01b03166001600160a01b0316815260200190815260200160002087815481106105fc576105fc610c11565b600091825260208083208454600590930201918255600180850154908301556002808501549083015560038085015490830155600493840154918401919091556001600160a01b0388168252919091526040902080548061065f5761065f610cab565b6000828152602081206005600019909301928302018181556001810182905560028101829055600381018290556004015590555b6001600160a01b0385167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568876106c98487610c72565b6040805192835260208301919091520160405180910390a2505050505050565b6001600160a01b0381166000908152600460209081526040808320805482518185028101850190935280835260609492939192909184015b8282101561078557838290600052602060002090600502016040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152505081526020019060010190610721565b505050509050919050565b610798610a78565b6107a26000610ad2565b565b600460205281600052604060002081815481106107c057600080fd5b600091825260209091206005909102018054600182015460028301546003840154600490940154929550909350919085565b6005818154811061080257600080fd5b6000918252602090912001546001600160a01b0316905081565b610824610a78565b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319166001600160a01b0392909216919091179055565b61087e610a78565b6001600160a01b0381166108e35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610337565b6108ec81610ad2565b50565b6000805b600554811015610946576005818154811061091057610910610c11565b6000918252602090912001546001600160a01b031633036109345760019150610946565b8061093e81610cc1565b9150506108f3565b508061098d5760405162461bcd60e51b81526020600482015260166024820152751b9bdd0818481cdd185ada5b99c818dbdb9d1c9858dd60521b6044820152606401610337565b60046000846001600160a01b03166001600160a01b031681526020019081526020016000206040518060a00160405280428152602001600254426109d19190610cda565b8152600380546020808401919091526000604080850182905260609485018990528654600180820189559783529183902086516005909302019182558583015196820196909655848601516002820155928401519183019190915560809092015160049091015590518381526001600160a01b038516917f3264e4ec12d4ef5355907238cfb33a16442d78ae7c1909d87bb40b07cc7e97db910160405180910390a2505050565b6000546001600160a01b031633146107a25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610337565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610b3957600080fd5b919050565b60008060408385031215610b5157600080fd5b610b5a83610b22565b946020939093013593505050565b600060208284031215610b7a57600080fd5b5035919050565b600060208284031215610b9357600080fd5b610b9c82610b22565b9392505050565b602080825282518282018190526000919060409081850190868401855b82811015610c045781518051855286810151878601528581015186860152606080820151908601526080908101519085015260a09093019290850190600101610bc0565b5091979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156102ba576102ba610c27565b600082610c6d57634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176102ba576102ba610c27565b600060208284031215610c9b57600080fd5b81518015158114610b9c57600080fd5b634e487b7160e01b600052603160045260246000fd5b600060018201610cd357610cd3610c27565b5060010190565b808201808211156102ba576102ba610c2756fea26469706673582212207eebf8c7dc3132a59fc4d044adea1facad8e7aa8d559b0f1eab4a19904dc2c2964736f6c63430008110033";

type CZYVesterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CZYVesterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CZYVester__factory extends ContractFactory {
  constructor(...args: CZYVesterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CZYVester> {
    return super.deploy(_token, overrides || {}) as Promise<CZYVester>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override attach(address: string): CZYVester {
    return super.attach(address) as CZYVester;
  }
  override connect(signer: Signer): CZYVester__factory {
    return super.connect(signer) as CZYVester__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CZYVesterInterface {
    return new utils.Interface(_abi) as CZYVesterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CZYVester {
    return new Contract(address, _abi, signerOrProvider) as CZYVester;
  }
}
